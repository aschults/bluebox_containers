#!/bin/sh

if [ -z $sslbump ] ; then
   exit
fi

if ! [ -f $vardir/ssl/nopeek.lst ] ; then
  touch $vardir/ssl/nopeek.lst
fi

ssl_crtd=/usr/lib/squid/ssl_crtd

dbdir=$vardir/ssl_db

if ! [ -d $dbdir ] ; then
  #mkdir $dbdir
  $ssl_crtd -c -s $dbdir >&2
fi
chown -R  squid:squid $dbdir

if [ -z "$allow_bump_all_ports" ] ; then
  echo "ssl_bump terminate !SSL_ports"
fi

cat <<EOF


acl NoBump ssl::server_name "$vardir/ssl/nopeek.lst"
acl step1 at_step SslBump1

# Trust, but verify:
# Bump if in doubt.
ssl_bump splice NoBump

ssl_bump stare step1
ssl_bump bump all

sslcrtd_program $ssl_crtd -s $vardir/ssl_db -M 4MB
sslcrtd_children 8 startup=1 idle=1


# dangerous. example only
#acl BadSite ssl_error SQUID_X509_V_ERR_DOMAIN_MISMATCH
acl SelfSigned ssl_error X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT
acl BrokenButTrustedServers dstdomain squidproxy
#
sslproxy_cert_error allow BrokenButTrustedServers #SelfSigned
sslproxy_cert_error allow to_localhost #SelfSigned
sslproxy_cert_error deny all

EOF

if [ -d $vardir/cacerts-gen ] ; then
  echo "sslproxy_capath $vardir/cacerts-gen"
fi

if [ -n "$log_ssl" ] ; then
  #echo debug_options 17,${log_ssl_level:-2}
  #echo debug_options 83,${log_ssl_level:-1} 44,2 17,2
  echo debug_options 83,${log_ssl_level:-1} 

  #echo 'logformat minessl { t:"SSL", time:"%tl", request:"%rm %ru", bump:"%ssl::bump_mode", sni:"%ssl::>sni", subj:"%ssl::>cert_subject", squid_ssl_err:"%ssl::<cert_errors" }'
  #echo 'logformat minessl { t:"SSL", time:"%tl", request:"%rm %ru", bump:"%ssl::bump_mode", sni:"%ssl::>sni", subj:"%ssl::>cert_subject", note:"%note" }'
  #echo "access_log daemon:$logdir/cache.log minessl"

fi
